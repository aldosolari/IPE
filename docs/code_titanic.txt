#--- IMPORT TITANIC DATA ---
# see https://hbiostat.org/data/repo/titanic5
# and https://hbiostat.org/rflow/caserm(list=ls())require(Hmisc)require(qreport)require(data.table)file <- tempfile()download.file('https://hbiostat.org/data/repo/titanic5.xlsx',               destfile=file)t5 <- csv.get('https://hbiostat.org/data/repo/titanic5.csv',              lowernames=TRUE, allow='_')g <- function(x)  if(is.character(x)) ifelse(trimws(x) == '', NA, x) else xt5 <- lapply(t5, g)setDT(t5)d <- copy(t5)setnames(d, 'dob_clean', 'dob')head(d)dd <- readxl::read_xlsx(file, sheet='Titanic5_metadata')setDT(dd)dd <- dd[, .(Variable, Description)]dd[, Variable := makeNames(tolower(Variable), allow='_')]dd[Variable == 'dob_clean', Variable := 'dob']dd[, writeLines(paste0(Variable, '\t: ', Description))]d[, dob := as.Date(dob, '%m/%d/%Y')]d[, table(is.na(age), is.na(dob))]d[, age := ifelse(is.na(age), age_f, age)]d[, .q(age_f, age_f_code) := NULL]pounds2dec <- function(price, check=FALSE) {  p <- strsplit(price, ' ')  if(check) prn(table(sapply(p, length)), 'Distribution of number of fields found')  # Get 1st, 2nd, 3rd fields (pad with blanks)  p1 <- sapply(p, function(x) x[1])  p2 <- sapply(p, function(x) if(length(x) < 2) ' ' else x[2])  p3 <- sapply(p, function(x) if(length(x) < 3) ' ' else x[3])  if(check) {    prn(table(p1), 'Frequencies of occurrence of all 1st field values')    prn(table(p2), '2nd field')    prn(table(p3), '3rd field')    prn(table(substring(p1, 1, 1)),       'First letter of 1st field')    prn(table(substring(p2, nchar(p2))),  'Last letter of 2nd field')    prn(table(substring(p3, nchar(p3))),  'Last letter of 3rd field')  }  # Put the 3 fields into a matrix for easy addressing  ps   <- cbind(p1, p2, p3)  pdec <- rep(0, length(p1))  # Function to return 0 if a specific currency symbol r is not  # found in x, otherwise removes the symbol and returns the  # remaining characters as numeric  # grepl returns TRUE if r is inside x, FALSE otherwise  # gsub replaces character r with "nothing" (''), i.e., removes r  g <- function(x, r) ifelse(grepl(r, x),                             as.numeric(gsub(r, '', x)), 0)  for(j in 1 : 3)  {    pj   <- ps[, j]    # jth sub-field of price for all passengers    pdec <- pdec + g(pj, '£') + g(pj, 's') / 20 + g(pj, 'd') / (12 * 20)  }  # If original price is NA or is either empty or blank  # make sure result is NA  pdec[is.na(price) | trimws(price) == ''] <- NA  if(check) print(data.table(price, pdec)[1:10])  pdec   # last object named in function is the returned value}d[, price := pounds2dec(price, check=TRUE)]all(names(d) %in% dd$Variable)labs          <- dd$Descriptionnames(labs)   <- dd$Variablelabs['age']   <- 'Age'            # named vector can be addressed with nameslabs['price'] <- 'Ticket price'   # instead of just integer subscriptslabs['dob']   <- 'Date of birth'labs['sex']   <- 'Sex'd <- upData(d, labels=labs,            units=c(age='years', price='£'))contents(d)titanic <- as.data.frame(d[,c("name","sex","age","survived","class","joined","ticket","price", "sibsp", "parch","job","occupation", "dob", "date_death","boat..body.", "url")])rm(d)rm(dd)rm(t5)titanic$price <- round(titanic$price,1)titanic$ticketFreq <- ave(1:nrow(titanic), titanic$ticket, FUN=length)titanic$pricepp <- round(titanic$price / titanic$ticketFreq,1)titanic$fsize <- 1 + titanic$sibsp + titanic$parchtitanic$title <- stringr::word(gsub('(.*, )|(\\..*)', '', titanic$name),1)readr::write_csv(as.data.frame(titanic), file = "titanic.csv")

#--- EXPLORING DATA ---



